<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>gov.nsa.datawave.microservice</groupId>
    <artifactId>datawave-microservice-parent</artifactId>
    <version>2.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>DataWave Microservices Parent</name>
    <description>DataWave mircoservices provide functionality previously contained in the DataWave
        Wildfly web service. Over time, more and more code will be moved out of the web service and
        into microservices.</description>
    <url>https://github.com/NationalSecurityAgency/datawave-microservices-root</url>
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:https://github.com/NationalSecurityAgency/datawave-parent.git</connection>
        <developerConnection>scm:git:git@github.com:NationalSecurityAgency/datawave-parent.git</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/NationalSecurityAgency/datawave-parent</url>
    </scm>
    <distributionManagement>
        <repository>
            <!-- NOTE: This section can go away once we are able to publish artifacts to maven central. -->
            <id>internal.repo</id>
            <name>Temporary Staging Repository</name>
            <url>file://${project.build.directory}/mvn-repo</url>
        </repository>
    </distributionManagement>
    <properties>
        <docker.image.prefix>datawave/</docker.image.prefix>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spotbugs.excludes.file />
        <surefire.forkCount>1C</surefire.forkCount>
        <version.docker.plugin>1.2.1</version.docker.plugin>
        <version.jackson>2.13.2</version.jackson>
        <!-- NOTE: The Junit and log4j management here will NOT override the management provided via spring boot.  Make
        sure to update these versions as you update the spring-boot version so that we don't get out of date. -->
        <version.junit.bom>5.8.2</version.junit.bom>
        <version.log4j.bom>2.17.2</version.log4j.bom>
        <version.lombok>1.18.24</version.lombok>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.lombok}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-bom</artifactId>
                <version>${version.log4j.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${version.junit.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <!--
                This repository is a temporary work-around until we can public artifacts to maven central.
                This allows us to retrieve released microservice artifacts from our github repository.
            -->
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>datawave-github-mvn-repo</id>
            <url>https://raw.githubusercontent.com/NationalSecurityAgency/datawave/mvn-repo</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <!--
            This is a temporary work-around until we can publish artifacts to maven central.
            This allows us to download the read-properties and assert-properties plugins, as
            well as the datawave code style template for the formatter-maven-plugin.
        -->
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>datawave-github-mvn-repo</id>
            <url>https://raw.githubusercontent.com/NationalSecurityAgency/datawave/mvn-repo</url>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.github.ekryd.sortpom</groupId>
                    <artifactId>sortpom-maven-plugin</artifactId>
                    <version>2.10.0</version>
                    <executions>
                        <execution>
                            <id>sort-pom</id>
                            <phase>process-sources</phase>
                            <goals>
                                <goal>sort</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <createBackupFile>false</createBackupFile>
                        <lineSeparator>\n</lineSeparator>
                        <expandEmptyElements>false</expandEmptyElements>
                        <nrOfIndentSpace>4</nrOfIndentSpace>
                        <sortDependencies>scope,groupId,artifactId</sortDependencies>
                        <sortPlugins>groupId,artifactId</sortPlugins>
                        <sortProperties>true</sortProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <version>3.1.12.2</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>High</threshold>
                        <xmlOutput>true</xmlOutput>
                        <excludeFilterFile>${spotbugs.excludes.file}</excludeFilterFile>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${version.docker.plugin}</version>
                    <executions>
                        <execution>
                            <id>tag-image</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push-image</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <imageName>${docker.image.prefix}${project.artifactId}</imageName>
                        <forceTags>true</forceTags>
                        <imageTags>
                            <imageTag>latest</imageTag>
                            <imageTag>${project.version}</imageTag>
                        </imageTags>
                        <dockerDirectory>${project.build.directory}/docker-filtered</dockerDirectory>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}-exec.jar</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <version>2.16.0</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>format</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>gov.nsa.datawave</groupId>
                            <artifactId>datawave-code-style</artifactId>
                            <version>1.0</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configFile>eclipse/Eclipse-Datawave-Codestyle.xml</configFile>
                        <lineEnding>LF</lineEnding>
                        <compilerSource>${maven.compiler.source}</compilerSource>
                        <compilerCompliance>${maven.compiler.source}</compilerCompliance>
                        <compilerTargetPlatform>${maven.compiler.target}</compilerTargetPlatform>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-engine</artifactId>
                            <version>${version.junit.bom}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <reuseForks>false</reuseForks>
                        <forkCount>${surefire.forkCount}</forkCount>
                        <threadCount>1</threadCount>
                        <threadCountClasses>1</threadCountClasses>
                        <threadCountMethods>0</threadCountMethods>
                        <threadCountSuites>0</threadCountSuites>
                        <argLine>-XX:+TieredCompilation -XX:TieredStopAtLevel=1  -Dfile.encoding=UTF8 -Duser.timezone=GMT -Xmx1024m -Dapple.awt.UIElement=true -Djava.security.krb5.realm= -Djava.security.krb5.kdc=</argLine>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <runOrder>random</runOrder>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>rpm-maven-plugin</artifactId>
                    <version>2.2.0</version>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>3.0.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>false</verbose>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                        <failOnNoGitDirectory>true</failOnNoGitDirectory>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                        <gitDescribe>
                            <skip>true</skip>
                        </gitDescribe>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!-- NOTE: This plugin can go away once we are able to publish artifacts to maven central. -->
                <groupId>com.github.github</groupId>
                <artifactId>site-maven-plugin</artifactId>
                <version>0.12</version>
                <executions>
                    <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>site</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <message>Maven artifacts for ${project.name} ${project.version}</message>
                    <!-- git commit message -->
                    <noJekyll>true</noJekyll>
                    <!-- disable webpage processing -->
                    <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
                    <!-- matches distribution management repository url above -->
                    <branch>refs/heads/mvn-repo</branch>
                    <!-- use the NationalSecurityAgency/datawave repo's mvn-repo branch, not the current repo -->
                    <repositoryOwner>NationalSecurityAgency</repositoryOwner>
                    <repositoryName>datawave</repositoryName>
                    <!-- remote branch name -->
                    <includes>
                        <include>**/*</include>
                    </includes>
                    <merge>true</merge>
                </configuration>
            </plugin>
            <plugin>
                <!-- NOTE: This plugin can go away once we are able to publish artifacts to maven central. -->
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.0.0-M3</version>
                <executions>
                    <execution>
                        <id>enforce-no-snapshots</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireReleaseDeps>
                                    <message>Snapshot dependencies are prohibited on a release build.</message>
                                    <onlyWhenRelease>true</onlyWhenRelease>
                                </requireReleaseDeps>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <releaseProfiles>dist</releaseProfiles>
                    <arguments>-Ddist</arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>autoformat</id>
            <activation>
                <property>
                    <name>!skipFormat</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.ekryd.sortpom</groupId>
                        <artifactId>sortpom-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <activation>
                <property>
                    <name>microservice-docker</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>prepare-dockerfile</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/docker-filtered</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.basedir}/src/main/docker</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                    <overwrite>true</overwrite>
                                    <delimiters>
                                        <delimiter>${*}</delimiter>
                                    </delimiters>
                                    <useDefaultDelimiters>false</useDefaultDelimiters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
                <os.detected.classifier>linux-x86_64-fedora</os.detected.classifier>
            </properties>
        </profile>
        <!-- The dist profile (activated with -Ddist) triggers building of source and javadoc artifacts. -->
        <profile>
            <id>dist</id>
            <activation>
                <property>
                    <name>dist</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <!-- build javadoc jars per module for publishing to the repo -->
                            <execution>
                                <id>module-apidocs</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <encoding>UTF-8</encoding>
                                    <destDir>${project.build.directory}/javadoc</destDir>
                                    <javadocVersion>11</javadocVersion>
                                    <additionalJOptions>
                                        <additionalJOption>-J-Xmx768m</additionalJOption>
                                    </additionalJOptions>
                                    <tags>
                                        <tag>
                                            <name>HTTP</name>
                                            <placement>m</placement>
                                            <head>HTTP Return Codes</head>
                                        </tag>
                                        <tag>
                                            <name>RequestHeader</name>
                                            <placement>m</placement>
                                            <head>HTTP Request Headers</head>
                                        </tag>
                                        <tag>
                                            <name>ResponseHeader</name>
                                            <placement>m</placement>
                                            <head>HTTP Response Headers</head>
                                        </tag>
                                        <tag>
                                            <name>returnWrapped</name>
                                            <placement>m</placement>
                                            <head>Output</head>
                                        </tag>
                                        <tag>
                                            <name>NonNullApi</name>
                                            <placement>p</placement>
                                            <head>Non-Null API</head>
                                        </tag>
                                        <tag>
                                            <name>NonNullFields</name>
                                            <placement>p</placement>
                                            <head>Non-Null Fields</head>
                                        </tag>
                                    </tags>
                                    <show>private</show>
                                    <quiet>true</quiet>
                                    <javaApiLinks>
                                        <property>
                                            <name>api_11.0</name>
                                            <value>https://docs.oracle.com/en/java/javase/11/docs/api</value>
                                        </property>
                                    </javaApiLinks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <!-- Build source jars and attach them to the project for publishing -->
                            <execution>
                                <id>datawave-java-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                    <goal>test-jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spotbugs</id>
            <activation>
                <property>
                    <name>!skipSpotbugs</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
